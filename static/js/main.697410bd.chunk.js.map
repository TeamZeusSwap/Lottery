{"version":3,"sources":["contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","components/Layout/Row.tsx","config/constants/contracts.ts","utils/addressHelpers.ts","hooks/useActiveWeb3React.ts","state/mint/actions.ts","config/constants/tokens.ts","state/swap/actions.ts","utils/bigNumber.ts","components/Layout/Column.tsx","utils/formatBalance.ts","utils/index.ts","config/constants/index.ts","config/constants/types.ts","utils/contractHelpers.ts","config/constants/multicall/index.ts","hooks/useContract.ts","components/Balance.tsx","state/pools/hooks.ts","utils/multicall.ts","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","hooks/Tokens.ts","state/user/hooks/index.tsx","utils/wrappedCurrency.ts","state/multicall/hooks.ts","state/user/actions.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","state/types.ts","views/Pools/helpers.tsx","state/application/reducer.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","config/index.ts","config/constants/lists.ts","state/lists/hooks.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","state/lists/actions.ts","components/QuestionHelper/index.tsx","utils/prices.ts","state/multicall/actions.ts","state/farms/hooks.ts","state/predictions/helpers.ts","state/predictions/queries.ts","config/constants/pools.ts","hooks/useToast.ts","utils/providers.ts","hooks/useTheme.ts","state/wallet/hooks.ts","config/constants/endpoints.ts","components/ConnectWalletButton.tsx","state/transactions/hooks.tsx","state/transactions/actions.ts","components/Card/index.tsx","config/localization/languages.ts","state/swap/hooks.ts","hooks/useParsedQueryString.ts","utils/compoundApyHelpers.ts","hooks/useRefresh.ts","state/lottery/helpers.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","hooks/usePairs.ts","hooks/useDebounce.ts","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","config/constants/farms.ts","hooks/useTokenBalance.ts","utils/isZero.ts","contexts/Localization/helpers.ts","state/block/hooks.ts","config/constants/nfts.ts","hooks/useAuth.ts","utils/wallet.ts","utils/currencyId.ts","state/application/hooks.ts","utils/uriToHttp.ts","state/user/hooks/helpers.ts","state/teams/index.tsx","config/constants/lottery.ts","components/TransactionConfirmationModal/index.tsx","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/trades.ts","hooks/Trades.ts","state/profile/hooks.ts","utils/calls/estimateGas.ts","utils/calls/farms.ts","utils/calls/pools.ts","components/Tags.tsx","utils/web3React.ts","components/App/Settings/TransactionSettings.tsx","components/App/Settings/SettingsModal.tsx","components/App/Settings/index.tsx","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","state/block/index.ts","utils/getRpcUrl.ts","utils/ENS/parseENSAddress.ts","components/Loader/CircleLoader.tsx","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","components/SearchModal/filtering.ts","config/constants/campaigns.ts","components/Loader/Dots.tsx","config/constants/teams.ts","hooks/useTotalSupply.ts","state/user/hooks/useUserAddedTokens.ts","state/teams/helpers.ts","components/Layout/Container.tsx","config/constants/meta.ts","components/Layout/Page.tsx","utils/collectibles.ts","hooks/usePreviousValue.ts","components/TokenImage/index.tsx","components/Menu/Footer.tsx","components/Menu/SubNav.tsx","views/Page.tsx","hooks/useLastUpdated.ts","config/constants/ifo.ts","components/ApyCalculatorModal/index.tsx","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","state/application/actions.ts","config/abi/erc20.ts","utils/contenthashToUri.ts","state/pools/helpers.ts","contexts/RefreshContext.tsx","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","hooks/usePersistState.ts","state/burn/actions.ts","utils/achievements.ts","utils/latinise.ts","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","state/predictions/index.ts","state/lottery/getUserLotteryData.ts","state/lottery/index.ts","utils/getTimePeriods.ts","components/Loader/PageLoader.tsx","state/collectibles/index.ts","components/PositionCard/index.tsx","state/voting/helpers.ts","state/voting/index.tsx","utils/apr.ts","state/lottery/getUserTicketsData.ts","routerHistory.ts","state/achievements/helpers.ts","state/achievements/index.ts","components/PageHeader/PageHeader.tsx","utils/farmHelpers.ts","state/lottery/getLotteriesData.ts","components/Layout/Flex.tsx","components/Select/Select.tsx","components/Loading.tsx","hooks/useDelayedUnmount.ts","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/DatePicker/DatePicker.tsx","components/DatePicker/DatePickerPortal.tsx","components/DatePicker/TimePicker.tsx","components/SearchInput/SearchInput.tsx","hooks/useIsWindowVisible.ts","state/application/updater.ts","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","components/Menu/UserMenu/WalletModal.tsx","hooks/useEagerConnect.ts","style/Global.tsx","components/Menu/config.ts","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","components/Menu/UserMenu/TransactionRow.tsx","components/Menu/UserMenu/WalletTransactions.tsx","views/Pools/components/ToggleView/ToggleView.tsx","components/Menu/UserMenu/WalletUserMenuItem.tsx","components/Menu/UserMenu/index.tsx","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/EasterEgg/EasterEgg.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.ts","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","config/constants/swapWarningTokens.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","hooks/useLast.ts","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/Swap/redirects.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["initialState","isFetching","currentLanguage","EN","languageMap","Map","set","locale","translations","LanguageContext","createContext","undefined","LanguageProvider","children","useState","codeFromStorage","getLanguageCodeFromLS","languages","state","setState","useEffect","a","enLocale","get","fetchLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","localStorage","setItem","LS_KEY","translate","useCallback","key","data","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","getAddress","address","process","ChainId","MAINNET","getCakeAddress","tokens","cake","getMasterChefAddress","addresses","getMulticallAddress","getWbnbAddress","wbnb","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getFarmAuctionAddress","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","useRef","simpleRpcProvider","provider","setprovider","current","parseInt","Field","typeInput","createAction","resetMintState","CAKE","Token","TESTNET","BUSD","WBNB","DAI","USDT","BTCB","UST","ETH","USDC","bnb","symbol","projectLink","decimals","babycake","bmon","hero","wsg","mcrn","revv","skill","if","sps","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","busd","eth","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","hotcross","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","kalm","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","babyvizsla","vizslaswap","hvi","bvc","fps","selectCurrency","switchCurrencies","replaceSwapState","setRecipient","BIG_ZERO","BigNumber","BIG_ONE","BIG_NINE","BIG_TEN","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","toJSON","Column","ColumnCenter","AutoColumn","getDecimalAmount","amount","times","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","split","leftSide","formatLocalisedCompactNumber","Intl","NumberFormat","notation","compactDisplay","maximumSignificantDigits","format","isAddress","getBscScanLink","type","BASE_BSC_SCAN_URLS","shortenAddress","chars","parsed","substring","calculateGasMargin","mul","add","basisPointsToPercent","num","Percent","JSBI","BigInt","calculateSlippageAmount","slippage","divide","multiply","raw","getContract","ABI","account","AddressZero","Contract","getSigner","connectUnchecked","getProviderOrSigner","getRouterContract","_","ROUTER_ADDRESS","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","Boolean","BASES_TO_CHECK_TRADES_AGAINST","WETH","ADDITIONAL_BASES","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","PoolIds","PoolCategory","NftType","LotteryStatus","AuctionStatus","abi","signer","signerOrProvider","getBep20Contract","bep20Abi","getErc721Contract","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","id","config","poolsConfig","find","pool","sousId","poolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","pointCenterIfo","getCakeContract","cakeAbi","getProfileContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getFarmAuctionContract","farmAuctionAbi","MULTICALL_NETWORKS","useIfoV1Contract","useMemo","useIfoV2Contract","useERC20","useERC721","useCake","useBunnyFactory","useProfile","useLotteryV2Contract","useMasterchef","useSousChef","usePointCenterIfoContract","useClaimRefundContract","useTradingCompetitionContract","useEasterNftContract","useCakeVaultContract","usePredictionsContract","useFarmAuctionContract","useContract","withSignerIfPossible","error","console","useTokenContract","tokenAddress","ERC20_ABI","useWETHContract","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","MULTICALL_ABI","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","duration","separator","useFetchPublicPoolsData","dispatch","useAppDispatch","slowRefresh","useRefresh","getBlockNumber","blockNumber","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","usePools","fastRefresh","fetchPoolsUserDataAsync","useSelector","pools","userDataLoaded","map","transformPool","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","cakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","performanceFee","callFee","withdrawalFee","withdrawalFeePeriod","userData","isLoading","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","multicall","calls","multi","itf","utils","Interface","calldata","call","toLowerCase","encodeFunctionData","name","params","aggregate","returnData","res","i","decodeFunctionResult","multicallv2","requireSuccess","tryAggregate","result","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","StyledListLogo","Logo","ListLogo","logoURI","alt","srcs","useHttpLocations","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","reduce","newMap","token","tokenMap_","useAllTokens","useCombinedActiveList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","includes","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","useSingleCallResult","NEVER_RELOAD","tokenNameBytes32","symbolBytes32","loading","useCurrency","currencyId","isBNB","toUpperCase","useAudioModeManager","useDispatch","audioPlay","user","toggleSetAudioMode","muteAudio","unmuteAudio","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","updateUserExpertMode","useThemeManager","isDark","toggleThemeAction","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","updateUserSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","updateUserSlippageTolerance","useUserFarmStakedOnly","isActive","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","FarmStakedOnly","TRUE","FALSE","updateUserFarmStakedOnly","ON_FINISHED","useUserTransactionTTL","userDeadline","deadline","updateUserDeadline","useAddUserToken","addSerializedToken","serializedToken","serializeToken","useRemoveUserAddedToken","removeSerializedToken","serializePair","pair","token0","token1","usePairAdder","addSerializedPair","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","pinnedPairs","generatedPairs","flatMap","base","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","memo","sorted","sortsBefore","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","isMethodArg","x","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","blocksPerFetch","Infinity","useCallsData","callResults","serializedCallKeys","JSON","stringify","c","toCallKey","sort","callKeys","parse","parseCallKey","addMulticallListeners","removeMulticallListeners","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","debug","useSingleContractMultipleData","contract","methodName","callInputs","interface","getFunction","results","inputs","callData","useBlockNumber","useMultipleContractSingleData","removeSerializedPair","toggleTheme","useTokenAllowance","ApprovalState","owner","spender","allowance","useApproveCallback","amountToApprove","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","addTransaction","useTransactionAdder","approve","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","then","response","summary","approval","useApproveCallbackFromTrade","allowedSlippage","computeSlippageAdjustedAmounts","INPUT","BetPosition","PredictionStatus","HistoryFilter","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","earningTokenPrice","apr","isHighValueToken","Math","round","roundingDecimals","compoundFrequency","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand365D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenPrice","getRoi","amountEarned","amountInvested","getCakeVaultEarnings","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","currentBlock","startBlock","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","max","blocksRemaining","hasPoolStarted","blocksToDisplay","createReducer","builder","addCase","updateBlockNumber","action","payload","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","timestamp","lastUpdateVersionTimestamp","tokenAAddress","tokenBAddress","now","transactions","hash","claim","txs","addedTime","clearAllTransactions","checkedTransaction","tx","lastCheckedBlockNumber","finalizeTransaction","receipt","confirmedTime","independentField","typedValue","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","byUrl","UNSUPPORTED_LIST_URLS","listUrl","activeListUrls","DEFAULT_ACTIVE_LIST_URLS","fetchTokenList","pending","requestId","url","fulfilled","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","push","rejected","errorMessage","addList","removeList","u","enableList","disableList","acceptListUpdate","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","listeners","callListeners","callKey","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievements","achievementsReducer","block","blockReducer","farms","farmsReducer","poolsReducer","predictions","predictionsReducer","profile","profileReducer","teams","teamsReducer","collectibles","collectiblesReducer","voting","votingReducer","lottery","lotteryReducer","application","swap","mint","burn","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","AUCTION_BIDDERS_TO_FETCH","RECLAIM_AUCTIONS_TO_FETCH","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","sortByListPriority","urlA","urlB","first","Number","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","allTokens","currentUrl","assign","useActiveListUrls","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","index","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","Promise","all","stakingLimits","accum","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingCake","pendingReward","fetchPublicVaultData","method","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","cakeVaultContract","fetchVaultUser","userContractResponse","getState","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","stakingTokenPrice","earningTokenAddress","earningToken","getPoolApr","parseFloat","tokenPerBlock","setPoolsPublicData","stakingLimitData","stakingTokenBalances","stakingTokenBalance","stakedBalance","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","createAsyncThunk","publicVaultInfo","vaultFees","PoolsSlice","createSlice","reducers","livePoolsData","livePoolData","userPoolData","findIndex","extraReducers","actions","QuestionWrapper","QuestionHelper","text","useTooltip","placement","trigger","targetRef","tooltip","tooltipVisible","ref","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","usePollFarmsData","includeArchive","pids","farmsConfig","nonArchivedFarms","farmToFetch","pid","fetchFarmsPublicDataAsync","fetchFarmUserDataAsync","usePollCoreFarmData","useFarms","useFarmFromPid","f","useFarmUser","farm","tokenBalance","earnings","useLpTokenPrice","lpSymbol","farmTokenPriceInUsd","busdPrice","useBusdPriceFromPid","lpTokenPrice","lpTotalSupply","lpTotalInQuoteToken","overallValueOfAllTokensInFarm","tokenAmountTotal","totalLpTokens","usePriceBnbBusd","bnbBusdFarm","quoteToken","usePriceCakeBusd","cakePriceBusdAsString","usePriceBVCBusd","vizslaPriceBusdAsString","Result","numberOrNull","valueNum","isNaN","transformBetResponse","betResponse","bet","position","BULL","BEAR","claimed","claimedHash","totalBets","totalBNB","transformRoundResponse","roundResponse","positionResponse","epoch","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalAmount","bullBets","bearBets","bearAmount","bullAmount","bets","transformTotalWonResponse","marketResponse","houseRounds","totalBNBTreasury","getRoundResult","currentEpoch","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getCanClaim","getUnclaimedWinningBets","getTotalWon","request","GRAPH_API_PREDICTION","gql","HOUSE","market","rounds","getBetHistory","where","skip","getLedgerData","epochs","ledgerCalls","getClaimStatuses","claimableCalls","claimableResponses","ledgerResponses","claimableResponse","claimable","getPredictionData","staticCalls","intervalBlocks","minBetAmount","paused","bufferBlocks","rewardRate","status","PAUSED","getRoundsData","makeFutureRoundResponse","rewardBaseCalAmount","rewardAmount","oracleCalled","makeRoundData","makeLedgerData","ledgers","ledgerResponse","eq","serializePredictionsLedgerResponse","serializePredictionsRoundsResponse","parseBigNumberObj","CORE","harvest","sortOrder","useToast","toastContext","ToastsContext","RPC_URL","getRpcUrl","providers","JsonRpcProvider","useTheme","theme","StyledThemeContext","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","some","callState","useTokenBalances","useTokenBalance","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","GRAPH_API_PROFILE","GRAPH_API_LOTTERY","SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","SNAPSHOT_API","SNAPSHOT_HUB_API","ConnectWalletButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","useAllTransactions","isTransactionRecent","allTransactions","Card","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","code","languageList","useSwapState","useSwapActionHandlers","onCurrencySelection","onSwitchTokens","onUserInput","onChangeRecipient","tryParseAmount","typedValueParsed","parseUnits","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","liquidityToken","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","useENS","to","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","search","useLocation","parseArrays","ignoreQueryPrefix","useParsedQueryString","setResult","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","RefreshContext","fast","slow","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","NUM_ROUNDS_TO_FETCH_FROM_NODES","roundId","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","userTickets","hasRoundBeenClaimed","tickets","ticket","priceHelperLps","lpAddresses","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","tokenDecimals","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","masterchefABI","info","totalAllocPoint","allocPoint","poolWeight","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","farmsWithPrices","baseTokenPrice","quoteTokenPrice","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","loadArchivedFarmsData","isArchivedPid","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","points","profileContract","getUsername","fetch","ok","json","username","getProfile","hasRegistered","getUserProfile","getTeam","team","getNftByTokenId","nft","Cookies","avatar","images","sm","domain","secure","expires","isInitialized","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","profileClear","addPoints","fetchProfile","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","getTokenLogoURL","StyledLogo","uriLocations","isCommunity","FetchStatus","useTotalSupply","totalSupply","setTotalSupply","cakeContract","supply","fetchTotalSupply","useBurnedBalance","setBalance","balanceOf","fetchBalance","useGetBnbBalance","NOT_FETCHED","fetchStatus","setFetchStatus","useLastUpdated","lastUpdated","setLastUpdated","walletBalance","SUCCESS","FAILED","refresh","balanceState","setBalanceState","prev","isZero","hexNumberString","getItem","usePollBlockNumber","interval","setInterval","setBlock","clearInterval","useBlock","useInitialBlock","initialBlock","IPFS_GATEWAY","nftSources","PANCAKE","identifierKey","MIXIE","Nfts","description","lg","md","ipfs","identifier","variationId","video","webm","mp4","blur","activate","deactivate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","setupNetwork","window","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","walletconnect","close","ethereum","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","registerToken","image","tokenAdded","uriToHttp","uri","substr","teamsList","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","getTeams","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","fontSize","bold","small","textAlign","TransactionSubmittedContent","onDismiss","currencyToAdd","strokeWidth","external","href","isMetaMask","variant","mt","asset","ml","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","justifyContent","pt","TransactionConfirmationModal","title","customOnDismiss","attemptingTxn","content","handleDismiss","headerBackground","nameOrAddress","validated","reverseLookup","debouncedAddress","ensNodeArgument","namehash","registrarContract","resolverAddress","resolverAddressResult","resolverContract","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","tokenIn","tokenOut","useFetchProfile","hasProfile","methodArgs","gasMarginPer10000","rawGasEstimation","gasEstimation","callWithEstimateGas","stakeFarm","enterStaking","wait","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","getActivePools","eligiblePools","startBlockCalls","endBlockCalls","startBlocks","endBlocks","poolCheck","lte","CoreTag","outline","startIcon","mr","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","VoteNowTag","SoonTag","ClosedTag","rpcUrl","getNodeUrl","injected","InjectedConnector","supportedChainIds","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","Web3Provider","signMessage","BinanceChain","bnbSign","signature","wc","wcMessage","hexlify","toUtf8Bytes","signPersonalMessage","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","rawSlippage","setRawSlippage","setDeadline","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","RiskyLow","RiskyHigh","InvalidInput","flexWrap","gridTemplateColumns","gridGap","mb","scale","placeholder","onBlur","onChange","e","target","isWarning","isSuccess","paddingTop","pl","SettingsModal","showConfirmExpertModal","setShowConfirmExpertModal","setUserslippageTolerance","ttl","setTtl","toggleExpertMode","setSingleHopOnly","onBack","maxWidth","prompt","checked","alignItems","SettingsTab","useModal","onPresentSettingsModal","show","TransactionState","primary","IconWrapper","failure","Transaction","CircleLoader","newTransactionsFirst","b","renderTransactions","flexDirection","TransactionsModal","sortedRecentTransactions","confirmed","clearAllTransactionsCallback","Transactions","onPresentTransactionsModal","AppHeaderContainer","Flex","AppHeader","subtitle","helper","backTo","noConfig","as","Link","BodyWrapper","AppBody","blockSlice","sample","parseENSAddress","ensAddress","ensPath","rotate","keyframes","StyledSVG","svg","stroke","rest","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","contenthashToUri","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","contenthash","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","nanoid","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastSuccess","toastWarning","WARNING","ToastListener","onRemove","StyledInput","input","textSubtle","inputRegex","Input","React","event","nextUserInput","inputMode","autoComplete","autoCorrect","pattern","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","Container","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","showCommonBases","selectedCurrencyBalance","translatedLabel","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","display","cursor","className","val","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","startsWith","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubtrings","trim","campaigns","badge","campaignMap","campaign","Dots","span","textColor","users","serializedTokensMap","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","teamData","onChainTeamData","px","DEFAULT_META","StyledPage","mediaQueries","PageMeta","pathname","cakePriceUsd","cakePriceUsdDisplay","pageMeta","getCustomMeta","pageTitle","join","property","Page","getIdentifierKeyFromAddress","nftSource","nftSourceEntry","getTokenUrl","tokenUri","getAddressByType","getTokenUriData","tokenURI","uriDataResponse","uriData","usePreviousValue","getImageUrlFromToken","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","TokenImage","src","BubbleWrapper","Footer","activeIndex","flexGrow","height","StyledNav","nav","Nav","location","gradients","bubblegum","xs","SubNav","setStateLastUpdated","previousLastUpdated","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","Grid","GridItem","GridHeaderItem","BulletList","ul","ApyCalculatorModal","displayApr","linkLabel","linkHref","earningTokenSymbol","isFarm","tokenEarnedPerThousand1D","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","textTransform","freq","fee","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","transformUserData","quoteTokenAddress","toLocaleLowerCase","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","document","hidden","addEventListener","removeEventListener","useIsBrowserTabActive","DetailsFooter","invertedContrast","UnsupportedModal","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","onError","ImportToken","handleCurrencySelect","setConfirmed","addToken","inactiveTokenList","gridTemplateRows","userSelect","disabled","maxAmountSpend","greaterThan","ens","resolvedContentHash","useENSContentHash","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","setValue","getAchievementTitle","getAchievementDescription","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","claimStatusCalls","pointCenterIfoABI","claimStatuses","claimStatusArr","claimableIfoData","claimableIfoDataItem","campaignMeta","ifoCampaign","Latinise","latin_map","τ","Τ","latinise","ZERO","useMintState","ConfirmAddModalBottom","price","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity","currencyIdA","currencyIdB","history","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","txHash","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","my","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","minWidth","marginTop","showUnwrapped","BLOCK_PADDING","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","ALL","currentRoundStartBlockNumber","lastOraclePrice","claimableStatuses","initializePredictions","marketData","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markBetHistoryAsCollected","betId","betIndex","newestRound","maxBy","futureRound","futureRounds","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","nodeRound","ticketDataForRound","roundTickets","totalTickets","graphRound","getGraphLotteryUser","blankUser","totalCake","userRes","getUserLotteryData","idsForTicketsNodeCall","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","graphResponse","mergedRoundData","graphResponseWithNodeRounds","isTransitioning","currentRound","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","getLotteriesData","lotteries","fetchUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","days","hours","minutes","floor","PageLoader","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","walletNft","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","association","FixedHeightRow","MinimalPositionCard","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","role","FullPositionCard","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","headers","body","statusText","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","votingSlice","_inValid","IDLE","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","idsToCheck","ticketsForMultipleRounds","ticketsForRound","createBrowserHistory","getUserPointIncreaseEvents","getAchievements","pointIncreaseEvents","userPoint","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","Outer","Inner","PageHeader","applyNodeDataToLotteriesGraphResponse","nodeData","ticketPrice","totalUsers","winningTickets","nodeRoundsWithGraphData","nodeRoundData","graphRoundData","graphResponseRound","lastCombinedDataRound","lastCombinedDataRoundIndex","remainingSubgraphRounds","splice","getGraphLotteries","idsForNodesCall","mergedData","FlexLayout","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ListItem","li","Select","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","containerSize","setContainerSize","toggling","stopPropagation","offsetWidth","offsetHeight","handleClickOutside","option","selectedIndex","Loading","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","BaseWrapper","disable","CommonBases","onSelect","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","opacity","currencyKey","StyledBalanceText","Text","FixedContentRow","MenuItem","CurrencyRow","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","CurrencyModalView","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","inputRef","focus","handleInput","checksummedInput","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","flex","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","marginLeft","ManageTokens","removeToken","handleRemoveAll","isAddressValid","importToken","StyledButtonMenu","ButtonMenu","Manage","showLists","setShowLists","onItemClick","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","DatePicker","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","InputWrapper","SearchInput","onChangeCallback","toggled","setToggled","searchText","setSearchText","debouncedOnChange","debounce","VISIBILITY_STATE_SUPPORTED","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","Updater","windowVisible","blockNumberCallback","on","removeListener","debouncedState","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","ceil","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","lastBlockNumber","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","WalletView","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","GlobalStyle","createGlobalStyle","icon","toLocaleUpperCase","Address","Tooltip","isTooltipDisplayed","contrast","CopyAddress","setIsTooltipDisplayed","displayTooltip","readOnly","navigator","clipboard","permissions","writeText","queryCommandSupported","ele","createElement","appendChild","select","execCommand","removeChild","WalletInfo","hasLowBnbBalance","cakeBalance","fontWeight","TxnIcon","Summary","TxnLink","renderIcon","txn","spin","TransactionRow","WalletTransactions","sortedTransactions","orderBy","minHeight","ViewMode","LOW_BNB_BALANCE","ModalHeader","UIKitModalHeader","Tabs","WalletModal","initialView","WALLET_INFO","view","setView","newIndex","fullWidth","TRANSACTIONS","WalletUserMenuItem","onPresentWalletModal","UserMenu","onPresentTransactionModal","avatarSrc","Menu","bvcPriceUsd","userMenu","currentLang","langs","setLang","links","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","EasterEgg","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","onPresentApyModal","StyledCard","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","CakeVaultTokenPairImage","primaryTokenSrc","CardHeader","backgroundDisabled","radii","StyledCardHeader","isStaking","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","useVaultApprove","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","endIcon","StyledLink","NotEnoughTokensModal","cardHeader","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","onUnstake","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","usdValueStaked","fullDecimalStakeAmount","plus","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","currencyValue","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","stakingTokenSymbol","feeInCake","callOptions","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","withdrawAll","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","ToggleWrapper","ViewControls","PoolTabButtons","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","Divider","BountyModal","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","tooltipPadding","right","BountyCard","onPresentBountyModal","ButtonText","HelpButton","BaseCell","CellContent","StyledCell","NameCell","useMatchBreakpoints","isXs","isSm","hasVaultShares","showStakedTag","showSubtitle","HelpIconWrapper","EarningsCell","labelText","Apr","showIcon","openRoiModal","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","showLoading","ArrowIcon","ChevronDownIcon","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","alignSelf","lineHeight","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isMd","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","Harvest","Stake","StyledRow","PoolRow","isLg","isXl","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","Pools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","chosenPools","showFinishedPools","lowercaseQuery","poolsToSort","sortPools","cardLayout","tableLayout","SwapWarningTokens","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","default","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","component","Label","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","warningTokenConfig","warningTokenData","warningTokenAddress","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectOldRemoveLiquidityPathStructure","RedirectPathToSwapOnly","RedirectToSwap","Home","lazy","Farms","FarmAuction","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","Voting","Proposal","CreateProposal","Liquidity","PoolFinder","RemoveLiquidity","Global","exact","strict","iterations","ThemeProviderWrapper","dark","light","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.697410bd.chunk.js","sourcesContent":["import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","export default {\n  masterChef: {\n    97: '',\n    56: '0x3FF00B58e432B0895e3fd69634Ec50e3931110c1',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x6F4b625814fAD4e0cedC6044ce042A2E4D2046e6',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0x1Cb956fb2A963084BBa550a59De6B4a897973534',\n    97: '',\n  },\n  predictions: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n  farmAuction: {\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\n    97: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\n  },\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'CAKE',\n    address: {\n      56: '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0xf8a4ce3ec23dc726fcb9127f75075e62e615a242',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  babyvizsla: {\n    symbol: 'BABYVIZSLA',\n    address: {\n      56: '0xfB19F247F1f22Cef1F0384535C779c664632cB6F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.babyvizsla.com/',\n  },\n    vizslaswap: {\n      symbol: 'VIZSLASWAP',\n      address: {\n        56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://vizslaswap.com',\n    },\n    hvi: {\n      symbol: 'HVI',\n      address: {\n        56: '0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://vizslainu.com/',\n    },\n    bvc: {\n      symbol: 'BVC',\n      address: {\n        56: '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://cryptochiptoken.com',\n    },\n    fps: {\n      symbol: 'FPS',\n      address: {\n        56: '0x213503534d927424A5cdf6d580E9Fd408be9337a',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://metaplayers.gg',\n    },\n}\n\nexport default tokens\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { SerializedBigNumber } from 'state/types'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap/sdk'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import BigNumber from 'bignumber.js'\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: SerializedBigNumber\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  farmStartBlock: number\n  farmStartDate: Date\n  farmEndBlock: number\n  farmEndDate: Date\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getFarmAuctionAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport { ChainLinkOracleContract, FarmAuctionContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getCakeAddress(), signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer)\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      {prefix && <span>{prefix}</span>}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {unit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nexport default Balance\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, Pool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import { Currency } from '@pancakeswap/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\n  }, [fragment, contract, results, latestBlockNumber])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\n  }, [fragment, results, contractInterface, latestBlockNumber])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber)\n  }, [result, contract, fragment, latestBlockNumber])\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { CampaignType, FarmConfig, LotteryStatus, LotteryTicket, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedHash: string\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number | null\n  endBlock: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n}\n\nexport interface NodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number\n  endBlock: number\n  lockPrice: ethers.BigNumber\n  closePrice: ethers.BigNumber\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  rewardRate: number\n  lastOraclePrice: string\n  history: HistoryData\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n  voting: VotingState\n  lottery: LotteryState\n}\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { createReducer } from '@reduxjs/toolkit'\nimport { updateBlockNumber } from './actions'\n\nexport interface ApplicationState {\n  readonly blockNumber: { readonly [chainId: number]: number }\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder.addCase(updateBlockNumber, (state, action) => {\n    const { chainId, blockNumber } = action.payload\n    if (typeof state.blockNumber[chainId] !== 'number') {\n      state.blockNumber[chainId] = blockNumber\n    } else {\n      state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n    }\n  }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  updateUserSingleHopOnly,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme,\n  updateUserFarmStakedOnly,\n  FarmStakedOnly,\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  userFarmStakedOnly: FarmStakedOnly\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport application from './application/reducer'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n\n    // Exchange\n    application,\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 19 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(40)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://pancakeswap.finance'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_URL}/pool`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 200000\nexport const DEFAULT_GAS_PRICE = 5\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_TOP100,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement: 'right-end', trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, Farm, FarmsState } from '../types'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([1,4, 2]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(2)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(4)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n\nexport const usePriceBVCBusd = (): BigNumber => {\n  const vizslaBnbFarm = useFarmFromPid(1)\n\n  const vizslaPriceBusdAsString = vizslaBnbFarm.token.busdPrice\n\n  const vizslaPriceBusd = useMemo(() => {\n    return new BigNumber(vizslaPriceBusdAsString)\n  }, [vizslaPriceBusdAsString])\n\n  return vizslaPriceBusd\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  TotalWonRoundResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedHash: betResponse.claimedHash,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformTotalWonResponse = (\n  marketResponse: TotalWonMarketResponse,\n  roundResponse: TotalWonRoundResponse[],\n): number => {\n  const houseRounds = roundResponse.reduce((accum, round) => {\n    return accum + (round.totalAmount ? parseFloat(round.totalAmount) : 0)\n  }, 0)\n\n  const totalBNB = marketResponse.totalBNB ? parseFloat(marketResponse.totalBNB) : 0\n  const totalBNBTreasury = marketResponse.totalBNBTreasury ? parseFloat(marketResponse.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - (totalBNBTreasury + houseRounds), 0)\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData($position: String) {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n        rounds(where: { position: $position }) {\n          totalAmount\n        }\n      }\n    `,\n    { position: BetPosition.HOUSE },\n  )) as { market: TotalWonMarketResponse; rounds: TotalWonRoundResponse[] }\n\n  return transformTotalWonResponse(response.market, response.rounds)\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\n// V2 REFACTOR\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  // \"claimable\" currently has a bug where it returns true on Bull bets even if the wallet did not interact with the round\n  // To get around this temporarily we check the ledger status as well to confirm that it is claimable\n  // This can be removed in Predictions V2\n  const ledgerResponses = await getLedgerData(account, epochs)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const { amount, claimed } = ledgerResponses[index]\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable && amount.gt(0) && !claimed,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalBlocks' | 'bufferBlocks' | 'minBetAmount' | 'rewardRate'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalBlocks', 'minBetAmount', 'paused', 'bufferBlocks', 'rewardRate'].map(\n    (method) => ({\n      address,\n      name: method,\n    }),\n  )\n  const [[currentEpoch], [intervalBlocks], [minBetAmount], [paused], [bufferBlocks], [rewardRate]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalBlocks: intervalBlocks.toNumber(),\n    bufferBlocks: bufferBlocks.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    rewardRate: rewardRate.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startBlock,\n    lockBlock: null,\n    endBlock: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startBlock,\n    lockBlock,\n    endBlock,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardAmount,\n    rewardBaseCalAmount,\n    oracleCalled,\n  } = response\n\n  return {\n    epoch: epoch.toNumber(),\n    startBlock: startBlock.toNumber(),\n    lockBlock: lockBlock.toNumber(),\n    endBlock: endBlock.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    oracleCalled,\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSJON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedHash: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\nexport interface TotalWonRoundResponse {\n  totalAmount: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n  claimedHash\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.vizslaswap,\n    contractAddress: {\n      97: '',\n      56: '0x3FF00B58e432B0895e3fd69634Ec50e3931110c1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.05',\n    sortOrder: 1,\n    isFinished: false,\n   },\n   {\n    sousId: 10,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.vizslaswap,\n    contractAddress: {\n      97: '',\n      56: '0xD24bffa1a9e3632A10CF07037aCf34bFe468Ff30',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 11,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.ltc,\n    contractAddress: {\n      97: '',\n      56: '0xf142BD28CaCd766c24201bD2FF4513CEc032e882',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00000625',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 5,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.eth,\n    contractAddress: {\n      97: '',\n      56: '0xa05E95D44d746FC833041fCb62103A04850e1851',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.000000347',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 1,\n    stakingToken: tokens.bvc,\n    earningToken: tokens.bvc,\n    contractAddress: {\n      97: '',\n      56: '0xb903485C032E93655B5d5CFe4A439018ACb9E211',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 2,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.bvc,\n    contractAddress: {\n      97: '',\n      56: '0xceaBfaA080d55E7375E836eEfc005cAF26CacFDb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 3,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.bvc,\n    contractAddress: {\n      97: '',\n      56: '0xe1445b4Bdd342d45C4DcAe52D4DDD1F30601C393',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 4,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.hvi,\n    contractAddress: {\n      97: '',\n      56: '0xe78Bf25A181A9b60Aef08a9F5e2079CB745234cb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '7000000000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 7,\n    stakingToken: tokens.babyvizsla,\n    earningToken: tokens.babyvizsla,\n    contractAddress: {\n      97: '',\n      56: '0x646086C73D560B7a4581F6229738c88733C92e4B',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '380000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 8,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.babyvizsla,\n    contractAddress: {\n      97: '',\n      56: '0x6688B8f6D2c0aEdeADf8c84d2aCDC87C2E1f02A9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '190000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 9,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.babyvizsla,\n    contractAddress: {\n      97: '',\n      56: '0x0340fdb81618874936535CA5276294fB84A719Ee',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '190000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 12,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.fps,\n    contractAddress: {\n      97: '',\n      56: '0xac4a94609dE599AA394E8C15e086eCef866d50cd',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.048',\n    sortOrder: 200,\n    isFinished: false,\n   },\n]\n\nexport default pools\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Connect')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n// Variable used to determine how many past rounds should be populated by node data rather than subgraph\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 2)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.hasRegistered(address)) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","const getTokenLogoURL = (address: string) =>\n  `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\n\nexport default getTokenLogoURL\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n   {\n    pid: 0,\n    lpSymbol: 'VIZSLASWAP',\n    lpAddresses: {\n      97: '',\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'VIZSLASWAP-BNB LP',\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x8d3cF6F026f1c8021BD3B0F74263D4D51208917F',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 8,\n    lpSymbol: 'VIZSLASWAP-BUSD LP',\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x738156eAE2715776CBF92eD5751F7b8fc99951b7',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.busd,\n   \n   },\n   {\n    pid: 3,\n    lpSymbol: 'HVI-BNB LP',\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x0388cc967e382A1c85161453bc6cEaA70E59E33e',\n    },\n    token: tokens.hvi,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 5,\n    lpSymbol: 'HVI-BUSD LP',\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x8F71caaB0e4A0eB8615aBfA6A12996cC3d37e988',\n    },\n    token: tokens.hvi,\n    quoteToken: tokens.busd,\n   \n   },\n\n   {\n    pid: 4,\n    lpSymbol: 'BVC-BNB LP',\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x7b338aB42d823e50851f3C61d8374D83c4E0F71f',\n    },\n    token: tokens.bvc,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 6,\n    lpSymbol: 'BABYVIZSLA-BNB LP',\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xeb94c1EA54AD6367D414B0B2075950646D0B6266',\n    },\n    token: tokens.babyvizsla,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 2,\n    lpSymbol: 'BUSD-BNB LP',\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 9,\n    lpSymbol: 'ETH-BNB LP',\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 10,\n    lpSymbol: 'LTC-BNB LP',\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\n    },\n    token: tokens.ltc,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 11,\n    lpSymbol: 'FPS-BUSD LP',\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x91F1Ae54D0c028C5f4dD428231935b408e331682',\n    },\n    token: tokens.fps,\n    quoteToken: tokens.busd,\n   },\n   \n  \n  /**\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\n   */\n   \n]\n\nexport default farms\n\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        const walletBalance = await simpleRpcProvider.getBalance(account)\n        setBalance(new BigNumber(walletBalance.toString()))\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch {\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, lastUpdated, setBalance, setFetchStatus])\n\n  return { balance, fetchStatus, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://cloudflare-ipfs.com'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\n/**\n * NOTE: https://cloudflare-ipfs.com does not support video streaming so for the video URLS we need to use\n * https://gateway.pinata.cloud\n */\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Claire',\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\n    images: {\n      lg: 'claire-lg.png',\n      md: 'claire-md.png',\n      sm: 'claire-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png',\n    },\n    sortOrder: 999,\n    identifier: 'claire',\n    type: NftType.PANCAKE,\n    variationId: 17,\n  },\n  {\n    name: 'Syrup Soak',\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\n    images: {\n      lg: 'soak-lg.png',\n      md: 'soak-md.png',\n      sm: 'soak-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'syrup-soak',\n    type: NftType.PANCAKE,\n    variationId: 16,\n  },\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../index'\n\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useActiveWeb3React()\n\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\n}\n\nexport default useBlockNumber\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { Token } from '@pancakeswap/sdk'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { State, ProfileState } from '../types'\nimport { fetchProfile } from '.'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n","import { ethers, Contract } from 'ethers'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[],\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = rawGasEstimation\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\n    .div(ethers.BigNumber.from(10000))\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[] = [],\n  gasMarginPer10000 = 1000,\n): Promise<ethers.providers.TransactionResponse> => {\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n  })\n  return tx\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  if (pid === 0) {\n    const tx = await await masterChefContract.leaveStaking('0', options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport pools from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { simpleRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = pools\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock',\n  }))\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Grid } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport QuestionHelper from '../../QuestionHelper'\nimport { AutoColumn } from '../../Layout/Column'\nimport { RowBetween, RowFixed } from '../../Layout/Row'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nexport interface SlippageTabsProps {\n  rawSlippage: number\n  setRawSlippage: (rawSlippage: number) => void\n  deadline: number\n  setDeadline: (deadline: number) => void\n}\n\nexport default function SlippageTabs({ rawSlippage, setRawSlippage, deadline, setDeadline }: SlippageTabsProps) {\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (rawSlippage / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (deadline / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && rawSlippage < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && rawSlippage > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  function parseCustomSlippage(value: string) {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setRawSlippage(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  function parseCustomDeadline(value: string) {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setDeadline(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoColumn gap=\"sm\">\n        <RowFixed>\n          <Text fontSize=\"14px\">{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if the price changes unfavorably by more than this percentage.')}\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Flex flexWrap={['wrap', 'wrap', 'nowrap']}>\n          <Grid gridTemplateColumns=\"1fr 1fr 1fr\" gridGap=\"8px\" mb={['8px', '8px', 0]} mr={[0, 0, '8px']}>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(10)\n              }}\n              variant={rawSlippage === 10 ? 'primary' : 'tertiary'}\n            >\n              0.1%\n            </Button>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(50)\n              }}\n              variant={rawSlippage === 50 ? 'primary' : 'tertiary'}\n            >\n              0.5%\n            </Button>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(100)\n              }}\n              variant={rawSlippage === 100 ? 'primary' : 'tertiary'}\n            >\n              1%\n            </Button>\n          </Grid>\n          <RowBetween>\n            <Input\n              scale=\"lg\"\n              placeholder={(rawSlippage / 100).toFixed(2)}\n              value={slippageInput}\n              onBlur={() => {\n                parseCustomSlippage((rawSlippage / 100).toFixed(2))\n              }}\n              onChange={(e) => parseCustomSlippage(e.target.value)}\n              isWarning={!slippageInputIsValid}\n              isSuccess={![10, 50, 100].includes(rawSlippage)}\n            />\n            <Text color=\"primary\" bold ml=\"8px\">\n              %\n            </Text>\n          </RowBetween>\n        </Flex>\n        {!!slippageError && (\n          <RowBetween\n            style={{\n              fontSize: '14px',\n              paddingTop: '7px',\n              color: slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E',\n            }}\n          >\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </RowBetween>\n        )}\n      </AutoColumn>\n\n      <AutoColumn gap=\"sm\">\n        <RowFixed>\n          <Text fontSize=\"14px\">{t('Transaction deadline')}</Text>\n          <QuestionHelper text={t('Your transaction will revert if it is pending for more than this long.')} ml=\"4px\" />\n        </RowFixed>\n        <RowFixed>\n          <Input\n            color={deadlineError ? 'red' : undefined}\n            onBlur={() => {\n              parseCustomDeadline((deadline / 60).toString())\n            }}\n            placeholder={(deadline / 60).toString()}\n            value={deadlineInput}\n            onChange={(e) => parseCustomDeadline(e.target.value)}\n          />\n          <Text pl=\"8px\" fontSize=\"14px\">\n            {t('minutes')}\n          </Text>\n        </RowFixed>\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n","import React, { useState } from 'react'\nimport { Button, Text, PancakeToggle, Flex, Message, Modal, ModalBody, InjectedModalProps } from '@pancakeswap/uikit'\nimport {\n  useAudioModeManager,\n  useExpertModeManager,\n  useUserTransactionTTL,\n  useUserSlippageTolerance,\n  useUserSingleHopOnly,\n} from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport { AutoColumn } from '../../Layout/Column'\nimport QuestionHelper from '../../QuestionHelper'\nimport { RowBetween, RowFixed } from '../../Layout/Row'\nimport TransactionSettings from './TransactionSettings'\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n\n  if (showConfirmExpertModal) {\n    return (\n      <Modal\n        title={t('Are you sure?')}\n        onBack={() => setShowConfirmExpertModal(false)}\n        onDismiss={onDismiss}\n        style={{ maxWidth: '420px' }}\n      >\n        <ModalBody>\n          <Message variant=\"warning\" mb=\"24px\">\n            <Text>\n              {t(\n                \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n              )}\n            </Text>\n          </Message>\n          <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n          <Button\n            variant=\"danger\"\n            id=\"confirm-expert-mode\"\n            onClick={() => {\n              // eslint-disable-next-line no-alert\n              if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n                toggleExpertMode()\n                setShowConfirmExpertModal(false)\n              }\n            }}\n          >\n            {t('Turn On Expert Mode')}\n          </Button>\n        </ModalBody>\n      </Modal>\n    )\n  }\n\n  return (\n    <Modal title={t('Settings')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\n      <ModalBody>\n        <AutoColumn gap=\"md\" style={{ padding: '1rem' }}>\n          <Text bold fontSize=\"20px\">\n            {t('Transaction Settings')}\n          </Text>\n          <TransactionSettings\n            rawSlippage={userSlippageTolerance}\n            setRawSlippage={setUserslippageTolerance}\n            deadline={ttl}\n            setDeadline={setTtl}\n          />\n          <Text bold fontSize=\"20px\" mt=\"32px\">\n            {t('Interface Settings')}\n          </Text>\n          <RowBetween>\n            <RowFixed>\n              <Text fontSize=\"14px\">{t('Toggle Expert Mode')}</Text>\n              <QuestionHelper\n                text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n                ml=\"4px\"\n              />\n            </RowFixed>\n            <PancakeToggle\n              id=\"toggle-expert-mode-button\"\n              checked={expertMode}\n              onChange={\n                expertMode\n                  ? () => {\n                      onChangeRecipient(null)\n                      toggleExpertMode()\n                    }\n                  : () => setShowConfirmExpertModal(true)\n              }\n            />\n          </RowBetween>\n          <RowBetween>\n            <RowFixed>\n              <Text fontSize=\"14px\">{t('Disable Multihops')}</Text>\n              <QuestionHelper text={t('Restricts swaps to direct pairs only.')} ml=\"4px\" />\n            </RowFixed>\n            <PancakeToggle\n              id=\"toggle-disable-multihop-button\"\n              checked={singleHopOnly}\n              onChange={() => {\n                setSingleHopOnly(!singleHopOnly)\n              }}\n            />\n          </RowBetween>\n          <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n            <RowFixed>\n              <Text fontSize=\"14px\">{t('Audio')}</Text>\n              <QuestionHelper text={t('🐰 Turn down your volume a bit before you swap')} ml=\"4px\" />\n            </RowFixed>\n            <PancakeToggle checked={audioPlay} onChange={toggleSetAudioMode} />\n          </Flex>\n        </AutoColumn>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Button, TuneIcon, NotificationDot, useModal } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport SettingsModal from './SettingsModal'\n\nexport default function SettingsTab() {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <NotificationDot show={expertMode}>\n      <Button variant=\"text\" p={0} onClick={onPresentSettingsModal} id=\"open-settings-dialog-button\">\n        <TuneIcon color=\"primary\" width=\"24px\" />\n      </Button>\n    </NotificationDot>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useMemo, useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\n      {account && (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"primary\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport Settings from './Settings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex>\n          <Settings />\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const BodyWrapper = styled(Card)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'VizslaSwap',\n  description:\n    'VizslaSwap is the decentralized exchange of the Hungarian Vizsla Inu (HVI) Ecosystem. Buy, Trade HVI or Partner tokens and stake them for best yields. All at one place. VizslaSwap – the simplest way to join the Vizsla Ecosystem.',\n  image: 'https://lotery.cryptochiptoken.com/images/hero.jpg',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Lottery')} | ${t('Vizslaswap')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('PancakeSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('PancakeSwap')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('PancakeSwap')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('PancakeSwap')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('PancakeSwap')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('Collectibles')} | ${t('PancakeSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('PancakeSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('PancakeSwap')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('Task Center')} | ${t('PancakeSwap')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('PancakeSwap')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.tokenURI(tokenId)\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = getAddress(token.symbol === 'BNB' ? tokens.wbnb.address : token.address)\n  return `/images/tokens/${address}.svg`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: Token\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, LinkExternal, Flex, Svg, Image, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    justify-content: space-between;\n    flex-direction: row;\n  }\n`\n\nconst BubbleWrapper = styled(Flex)`\n  svg {\n    fill: ${({ theme }) => theme.colors.textSubtle};\n    transition: background-color 0.2s, opacity 0.2s;\n  }\n  &:hover {\n    svg {\n      opacity: 0.65;\n    }\n  }\n  &:active {\n    svg {\n      opacity: 0.85;\n    }\n  }\n`\n\nconst Footer = () => {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <Flex flexDirection={['column', 'column', 'row']} alignItems=\"center\">\n        <ButtonMenu variant=\"subtle\" scale=\"sm\" activeIndex={0}>\n          <ButtonMenuItem>V2</ButtonMenuItem>\n          <ButtonMenuItem as=\"a\" href=\"https://v1exchange.pancakeswap.finance/#/\">\n            V1 (old)\n          </ButtonMenuItem>\n        </ButtonMenu>\n        <LinkExternal\n          href=\"https://www.binance.org/en/bridge?utm_source=PancakeSwap\"\n          ml={[0, 0, '40px']}\n          mt={['20px', '20px', 0]}\n          mb={['8px', '8px', 0]}\n        >\n          {t('Convert ERC-20 to BEP-20')}\n        </LinkExternal>\n      </Flex>\n      <Flex\n        flexGrow={1}\n        alignItems=\"center\"\n        width={['100%', '100%', '100%', 'auto']}\n        justifyContent={['center', 'center', 'center', 'flex-end']}\n      >\n        <BubbleWrapper>\n          <Button\n            id=\"clickExchangeHelp\"\n            as=\"a\"\n            external\n            href=\"https://docs.pancakeswap.finance/products/pancakeswap-exchange\"\n            variant=\"subtle\"\n          >\n            {t('Need help ?')}\n          </Button>\n          <Svg viewBox=\"0 0 16 16\">\n            <path d=\"M0 16V0C0 0 3 1 6 1C9 1 16 -2 16 3.5C16 10.5 7.5 16 0 16Z\" />\n          </Svg>\n        </BubbleWrapper>\n        <Image src=\"/images/help.svg\" alt=\"Get some help\" width={160} height={108} />\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool') ||\n    pathname.includes('/create') ||\n    pathname.includes('/add') ||\n    pathname.includes('/remove') ||\n    pathname.includes('/find') ||\n    pathname.includes('/liquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport Footer from 'components/Menu/Footer'\nimport SubNav from 'components/Menu/SubNav'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n      <Footer />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    margin: 0;\n    padding: 0;\n  }\n\n  li::before {\n    content: '•';\n    margin-right: 4px;\n  }\n\n  li::marker {\n    font-size: 12px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CAKE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      {isFarm && (\n        <Box>\n          <Flex mb=\"8px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('APR (incl. LP rewards)')}\n            </Text>\n            <Text small>{displayApr}%</Text>\n          </Flex>\n          <Flex mb=\"24px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('Base APR (yield only)')}\n            </Text>\n            <Text small>{apr.toFixed(roundingDecimals)}%</Text>\n          </Flex>\n        </Box>\n      )}\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text\n            textAlign=\"right\"\n            fontSize=\"12px\"\n            bold\n            color=\"textSubtle\"\n            textTransform=\"uppercase\"\n            mr=\"12px\"\n            ml=\"12px\"\n            mb=\"12px\"\n          >\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text textAlign=\"right\" fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d (APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\" p=\"4px\">\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Compounding %freq%x daily.', { freq: compoundFrequency.toLocaleString() })}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('application/updateBlockNumber')\n\nexport default updateBlockNumber\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { ethers } from 'ethers'\nimport { Campaign } from 'config/constants/types'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\n    return {\n      address: getPointCenterIfoAddress(),\n      name: 'checkClaimStatus',\n      params: [account, address],\n    }\n  })\n\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\n    | [boolean][]\n    | null\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\n      if (claimStatusArr === null) {\n        return accum\n      }\n\n      const [claimStatus] = claimStatusArr\n\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from '@pancakeswap/uikit'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, LedgerData, HistoryFilter, PredictionsState, PredictionStatus, ReduxNodeRound } from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n} from './helpers'\n\nconst PAST_ROUND_COUNT = 5\nconst FUTURE_ROUND_COUNT = 2\n\n// The estimated time it takes to broadcast\nexport const BLOCK_PADDING = 3\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 20,\n  minBetAmount: '1000000000000000',\n  rewardRate: 97,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  ledgers: {},\n  claimableStatuses: {},\n}\n\n// Thunks\n// V2 REFACTOR\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalBlocks'\n  | 'bufferBlocks'\n  | 'minBetAmount'\n  | 'rewardRate'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs = range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n// END V2 REFACTOR\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markBetHistoryAsCollected: (state, action: PayloadAction<{ account: string; betId: string }>) => {\n      const { account, betId } = action.payload\n\n      if (state.history[account]) {\n        const betIndex = state.history[account].findIndex((bet) => bet.id === betId)\n\n        if (betIndex >= 0) {\n          state.history[account][betIndex].claimed = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalBlocks, bufferBlocks, minBetAmount, rewardRate } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startBlock + (state.intervalBlocks + BLOCK_PADDING),\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n        state.currentRoundStartBlockNumber = state.currentRoundStartBlockNumber + state.intervalBlocks + BLOCK_PADDING\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalBlocks = intervalBlocks\n      state.bufferBlocks = bufferBlocks\n      state.minBetAmount = minBetAmount\n      state.rewardRate = rewardRate\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, bufferBlocks, intervalBlocks, rounds, claimableStatuses, rewardRate, ledgers } =\n        action.payload\n      const currentRoundStartBlockNumber = action.payload.rounds[currentEpoch].startBlock\n      const futureRounds: ReduxNodeRound[] = []\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(\n          makeFutureRoundResponse(\n            currentEpoch + i,\n            currentRoundStartBlockNumber + (intervalBlocks + BLOCK_PADDING) * i,\n          ),\n        )\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        bufferBlocks,\n        intervalBlocks,\n        rewardRate,\n        currentRoundStartBlockNumber,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = bets\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markBetHistoryAsCollected,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  //   Else if there is a graph response - merge with node data where node data is more accurate\n  const mergedResponse = userGraphData.map((graphRound, index) => {\n    const nodeRound = lotteryNodeData[index]\n    // if there is node data for this index, overwrite graph data. Otherwise - return graph data.\n    if (nodeRound) {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      // if isLoading === true, there has been a node error - return graphRound\n      if (!nodeRound.isLoading) {\n        return {\n          endTime: nodeRound.endTime,\n          status: nodeRound.status,\n          lotteryId: nodeRound.lotteryId.toString(),\n          claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n          totalTickets: graphRound.totalTickets,\n          tickets: ticketDataForRound.userTickets,\n        }\n      }\n      return graphRound\n    }\n    return graphRound\n  })\n  return mergedResponse\n}\n\nconst getGraphLotteryUser = async (account: string): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: 100, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase() },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status,\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React from 'react'\nimport styled from 'styled-components'\nimport { LogoIcon } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <LogoIcon />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    if (!campaignMap.has(userPoint.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype LotteriesWhere = { id_in?: string[] }\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  // Populate all nodeRound data with supplementary graphResponse round data when available\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\n    return {\n      endTime: nodeRoundData.endTime,\n      finalNumber: nodeRoundData.finalNumber.toString(),\n      startTime: nodeRoundData.startTime,\n      status: nodeRoundData.status,\n      id: nodeRoundData.lotteryId,\n      ticketPrice: graphRoundData?.ticketPrice,\n      totalTickets: graphRoundData?.totalTickets,\n      totalUsers: graphRoundData?.totalUsers,\n      winningTickets: graphRoundData?.winningTickets,\n    }\n  })\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = graphResponse\n    .map((graphRound) => graphRound?.id)\n    .indexOf(lastCombinedDataRound?.id)\n\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteries = async (\n  first = MAX_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: LotteriesWhere = {},\n): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n      { skip, first, where },\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { SUGGESTED_BASES } from '../../config/constants'\nimport { AutoColumn } from '../Layout/Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontSize=\"14px\">{t('Common bases')}</Text>\n        <QuestionHelper text={t('These tokens are commonly paired with other tokens.')} ml=\"4px\" />\n      </AutoRow>\n      <AutoRow gap=\"auto\">\n        <BaseWrapper\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n              onSelect(ETHER)\n            }\n          }}\n          disable={selectedCurrency === ETHER}\n        >\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\n          <Text>BNB</Text>\n        </BaseWrapper>\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\n              <Text>{token.symbol}</Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n          )}\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showCommonBases={showCommonBases}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n        {modalView === CurrencyModalView.search && (\n          <Footer>\n            <Button\n              scale=\"sm\"\n              variant=\"text\"\n              onClick={() => setModalView(CurrencyModalView.manage)}\n              className=\"list-token-manage-button\"\n            >\n              {t('Manage Tokens')}\n            </Button>\n          </Footer>\n        )}\n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React from 'react'\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Input, InputProps } from '@pancakeswap/uikit'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  inputProps?: InputProps\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\n  return (\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport DatePicker, { DatePickerProps } from './DatePicker'\n\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <DatePicker\n      showTimeSelect\n      showTimeSelectOnly\n      timeIntervals={15}\n      timeCaption={t('Time')}\n      dateFormat=\"ppp\"\n      {...props}\n    />\n  )\n}\n\nexport default TimePicker\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(placeholder)}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import { useCallback, useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n  const [focused, setFocused] = useState<boolean>(isWindowVisible())\n  const listener = useCallback(() => {\n    setFocused(isWindowVisible())\n  }, [setFocused])\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    document.addEventListener('visibilitychange', listener)\n    return () => {\n      document.removeEventListener('visibilitychange', listener)\n    }\n  }, [listener])\n\n  return focused\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useDebounce from 'hooks/useDebounce'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { updateBlockNumber } from './actions'\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch()\n\n  const windowVisible = useIsWindowVisible()\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null,\n  })\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((prev) => {\n        if (chainId === prev.chainId) {\n          if (typeof prev.blockNumber !== 'number') return { chainId, blockNumber }\n          return { chainId, blockNumber: Math.max(blockNumber, prev.blockNumber) }\n        }\n        return prev\n      })\n    },\n    [chainId, setState],\n  )\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined\n\n    setState({ chainId, blockNumber: null })\n\n    library\n      .getBlockNumber()\n      .then(blockNumberCallback)\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n    library.on('block', blockNumberCallback)\n    return () => {\n      library.removeListener('block', blockNumberCallback)\n    }\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\n\n  const debouncedState = useDebounce(state, 100)\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\n\n  return null\n}\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param latestBlockNumber the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  latestBlockNumber: number | undefined,\n): string[] {\n  if (!chainId || !latestBlockNumber) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const latestBlockNumber = useBlockNumber()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber)\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!latestBlockNumber || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== latestBlockNumber) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: latestBlockNumber,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: latestBlockNumber,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, latestBlockNumber), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: latestBlockNumber }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', latestBlockNumber)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: latestBlockNumber,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, latestBlockNumber])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport useToast from 'hooks/useToast'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  lastBlockNumber: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n\n  const lastBlockNumber = useBlockNumber()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                'Transaction receipt',\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      View on BscScan\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, toastSuccess, toastError])\n\n  return null\n}\n","import React, { useState } from 'react'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  CloseIcon,\n  Heading,\n  IconButton,\n  InjectedModalProps,\n  ModalBody,\n  ModalContainer,\n  ModalHeader as UIKitModalHeader,\n  ModalTitle,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport WalletInfo from './WalletInfo'\nimport WalletTransactions from './WalletTransactions'\n\nexport enum WalletView {\n  WALLET_INFO,\n  TRANSACTIONS,\n}\n\ninterface WalletModalProps extends InjectedModalProps {\n  initialView?: WalletView\n}\n\nexport const LOW_BNB_BALANCE = new BigNumber('2000000000') // 2 Gwei\n\nconst ModalHeader = styled(UIKitModalHeader)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst Tabs = styled.div`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 16px 24px;\n`\n\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\n  const [view, setView] = useState(initialView)\n  const { t } = useTranslation()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  const handleClick = (newIndex: number) => {\n    setView(newIndex)\n  }\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Your Wallet')}</Heading>\n        </ModalTitle>\n        <IconButton variant=\"text\" onClick={onDismiss}>\n          <CloseIcon width=\"24px\" color=\"text\" />\n        </IconButton>\n      </ModalHeader>\n      <Tabs>\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\n          <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\n          <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\n        </ButtonMenu>\n      </Tabs>\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\n        {view === WalletView.TRANSACTIONS && <WalletTransactions />}\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default WalletModal\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n    body {\n      background-image: url('images/9.jpg');\n     background-attachment: fixed;\n    background-position: left top;\n    background-repeat: no-repeat;\n    background-size: cover;\n    \n       }\n    \n    @media only screen and (max-width: 1350px) {\n    body {\n      background-image: url('images/5.png');\n      background-attachment: fixed;\n      background-position: top;\n      background-size: 100%;\n      background-repeat: repeat;\n    }\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'HomeIcon',\n    href: 'https://www.vizslaswap.com/',\n  },\n  {\n    label: t('Trade'),\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: t('Exchange'),\n        href: 'https://vizslaexchange.vizslaswap.com/#/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: 'https://vizslaexchange.vizslaswap.com/#/pool',\n      },\n    ],\n  },\n  {\n    label: t('Liquidity Mining'),\n    icon: 'FarmIcon',\n    href: 'https://www.vizslaswap.com/liquiditymining',\n  },\n  {\n    label: t('Staking Pools'),\n    icon: 'PoolIcon',\n    href: 'https://www.vizslaswap.com/pools/all',\n  },\n  {\n    label: t('Lottery'),\n    icon: 'TicketIcon',\n    href: '/',\n    status: {\n      text: t('Win').toLocaleUpperCase(),\n      color: 'success',\n    },\n  },\n  {\n    label: t('Partnership'),\n    icon: 'NftIcon',\n    href: 'https://www.vizslaswap.com/partnership',    \n      },\n  {\n    label: t('WhitePaper'),\n    icon: 'MoreIcon',\n    href: 'https://www.vizslaswap.com/whitepaper',    \n      },\n    ]\n  \n\nexport default config\n","import React, { useState } from 'react'\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface CopyAddressProps extends FlexProps {\n  account: string\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-radius: 16px;\n  position: relative;\n`\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    background: linear-gradient(\n      to right,\n      ${({ theme }) => theme.colors.background}00,\n      ${({ theme }) => theme.colors.background}E6\n    );\n    content: '';\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  top: -38px;\n  right: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n  width: 100px;\n`\n\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n  const { t } = useTranslation()\n\n  const copyAddress = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <Address title={account}>\n          <input type=\"text\" readOnly value={account} />\n        </Address>\n        <IconButton variant=\"text\" onClick={copyAddress}>\n          <CopyIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n      </Wrapper>\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\n    </Box>\n  )\n}\n\nexport default CopyAddress\n","import React from 'react'\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance, { useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport CopyAddress from './CopyAddress'\n\ninterface WalletInfoProps {\n  hasLowBnbBalance: boolean\n  onDismiss: InjectedModalProps['onDismiss']\n}\n\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { balance } = useGetBnbBalance()\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\n  const { logout } = useAuth()\n\n  const handleLogout = () => {\n    onDismiss()\n    logout()\n  }\n\n  return (\n    <>\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\n        {t('Your Address')}\n      </Text>\n      <CopyAddress account={account} mb=\"24px\" />\n      {hasLowBnbBalance && (\n        <Message variant=\"warning\" mb=\"24px\">\n          <Box>\n            <Text fontWeight=\"bold\">{t('BNB Balance Low')}</Text>\n            <Text as=\"p\">{t('You need BNB for transaction fees.')}</Text>\n          </Box>\n        </Message>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('BNB Balance')}</Text>\n        <Text>{getFullDisplayBalance(balance, 18, 6)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"textSubtle\">{t('BVC Balance')}</Text>\n        <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"end\" mb=\"24px\">\n        <LinkExternal href={getBscScanLink(account, 'address')}>{t('View on BscScan')}</LinkExternal>\n      </Flex>\n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\n        {t('Disconnect Wallet')}\n      </Button>\n    </>\n  )\n}\n\nexport default WalletInfo\n","import React from 'react'\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\n\ninterface TransactionRowProps {\n  txn: TransactionDetails\n}\n\nconst TxnIcon = styled(Flex)`\n  align-items: center;\n  flex: none;\n  width: 24px;\n`\n\nconst Summary = styled.div`\n  flex: 1;\n  padding: 0 8px;\n`\n\nconst TxnLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst renderIcon = (txn: TransactionDetails) => {\n  if (!txn.receipt) {\n    return <RefreshIcon spin width=\"24px\" />\n  }\n\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\n  ) : (\n    <BlockIcon color=\"failure\" width=\"24px\" />\n  )\n}\n\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!txn) {\n    return null\n  }\n\n  return (\n    <TxnLink href={getBscScanLink(txn.hash, 'transaction', chainId)} external>\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\n      <Summary>{txn.summary ?? txn.hash}</Summary>\n      <TxnIcon>\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\n      </TxnIcon>\n    </TxnLink>\n  )\n}\n\nexport default TransactionRow\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Box, Button, Flex, Text } from '@pancakeswap/uikit'\nimport { AppDispatch } from 'state'\nimport { useAllTransactions } from 'state/transactions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { orderBy } from 'lodash'\nimport TransactionRow from './TransactionRow'\n\nconst WalletTransactions: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const allTransactions = useAllTransactions()\n  const sortedTransactions = orderBy(allTransactions, 'addedTime', 'desc')\n\n  const handleClearAll = () => {\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }\n\n  return (\n    <Box minHeight=\"120px\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\n          {t('Recent Transactions')}\n        </Text>\n        {sortedTransactions.length > 0 && (\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\n            {t('Clear all')}\n          </Button>\n        )}\n      </Flex>\n      {sortedTransactions.length > 0 ? (\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\n      ) : (\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\n      )}\n    </Box>\n  )\n}\n\nexport default WalletTransactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { Flex, UserMenuItem, WarningIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface WalletUserMenuItemProps {\n  hasLowBnbBalance: boolean\n  onPresentWalletModal: () => void\n}\n\nconst WalletUserMenuItem: React.FC<WalletUserMenuItemProps> = ({ hasLowBnbBalance, onPresentWalletModal }) => {\n  const { t } = useTranslation()\n\n  return (\n    <UserMenuItem as=\"button\" onClick={onPresentWalletModal}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n        {t('Wallet')}\n        {hasLowBnbBalance && <WarningIcon color=\"warning\" width=\"24px\" />}\n      </Flex>\n    </UserMenuItem>\n  )\n}\n\nexport default WalletUserMenuItem\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Flex,\n  LogoutIcon,\n  useModal,\n  UserMenu as UIKitUserMenu,\n  UserMenuDivider,\n  UserMenuItem,\n} from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useProfile } from 'state/profile/hooks'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\nimport WalletUserMenuItem from './WalletUserMenuItem'\n\nconst UserMenu = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { logout } = useAuth()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { isInitialized, isLoading, profile } = useProfile()\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n  const hasProfile = isInitialized && !!profile\n  const avatarSrc = profile && profile.nft ? `/images/nfts/${profile.nft.images.sm}` : undefined\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  if (!account) {\n    return <ConnectWalletButton scale=\"sm\" />\n  }\n\n  return (\n    <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\n        {t('Transactions')}\n      </UserMenuItem>\n      <UserMenuItem as=\"button\" onClick={logout}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Disconnect')}\n          <LogoutIcon />\n        </Flex>\n      </UserMenuItem>\n    </UIKitUserMenu>\n  )\n}\n\nexport default UserMenu\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd, usePriceBVCBusd } from 'state/farms/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport config from './config'\nimport UserMenu from './UserMenu'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const bvcPriceUsd = usePriceBVCBusd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      userMenu={<UserMenu />}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      bvcPriceUsd={bvcPriceUsd.toNumber()}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n          <IconButton onClick={onPresentApyModal} variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n                  {t('Blocks')}\n                </Text>\n                <TimerIcon ml=\"4px\" color=\"primary\" />\n              </Link>\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false} small>\n          {t('See Token Info')}\n        </LinkExternal>\n      </Flex>\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { TokenPairImage, ImageProps } from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { getAddress } from 'utils/addressHelpers'\n\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\n  const primaryTokenSrc = `/images/tokens/${getAddress(tokens.cake.address)}.svg`\n\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\n}\n\nexport default CakeVaultTokenPairImage\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Token } from 'config/constants/types'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningToken: Token\n  stakingToken: Token\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const isCakePool = earningToken.symbol === 'CAKE' && stakingToken.symbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        {isAutoVault ? (\n          <CakeVaultTokenPairImage width={64} height={64} />\n        ) : (\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\n        )}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await lpContract.approve(sousChefContract.address, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256)\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const tx = await sousChefContract.emergencyWithdraw()\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit('0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        isStaking={accountHasStakedBalance}\n        earningToken={earningToken}\n        stakingToken={stakingToken}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked =\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await cakeVaultContract.withdrawAll(callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await cakeVaultContract.withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString(), callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await cakeVaultContract.deposit(convertedStakeAmount.toString(), callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href=\"/swap\" variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport tokens from 'config/constants/tokens'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        isStaking={accountHasSharesStaked}\n        isAutoVault\n        earningToken={tokens.cake}\n        stakingToken={tokens.cake}\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Balance from 'components/Balance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await cakeVaultContract.harvest({ gasLimit: 300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('CAKE bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" CAKE\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" CAKE\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n          id=\"autoCakeConfirmBounty\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <ConnectWalletButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto CAKE Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto CAKE pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto CAKE Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: block;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  margin-right: 16px;\n  display: flex;\n  justify-content: flex-end;\n\n  &:hover {\n    text-decoration: none;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1;\n  }\n`\n\nconst HelpButton = () => {\n  const { t } = useTranslation()\n  return (\n    <StyledLink external href=\"https://docs.pancakeswap.finance/syrup-pools/syrup-pool\">\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n          {t('Help')}\n        </ButtonText>\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n      </Button>\n    </StyledLink>\n  )\n}\n\nexport default HelpButton\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n\n  if (isAutoVault) {\n    title = t('Auto CAKE')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual CAKE')\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      {isAutoVault ? (\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\n      ) : (\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\n      )}\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent CAKE profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            onClick={openRoiModal}\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n          {!isFinished && showIcon && (\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n            </Button>\n          )}\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent CAKE profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex>\n          <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false}>\n            {t('See Token Info')}\n          </LinkExternal>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport { usePollFarmsData } from 'state/farms/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport Loading from 'components/Loading'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_pool_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Syrup Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={loadMoreRef} />\n        <Image\n          mx=\"auto\"\n          mt=\"12px\"\n          src=\"/images/decorations/3d-syrup-bunnies.png\"\n          alt=\"Pancake illustration\"\n          width={192}\n          height={184.5}\n        />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import tokens from 'config/constants/tokens'\nimport { Address } from './types'\n\nconst { bondly, safemoon } = tokens\n\ninterface WarningToken {\n  symbol: string\n  address: Address\n}\n\ninterface WarningTokenList {\n  [key: string]: WarningToken\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  safemoon,\n  bondly,\n}\n\nexport default SwapWarningTokens\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                  <Text>- 0.05% towards CAKE buyback and burn</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n                <Text>- 0.05% towards CAKE buyback and burn</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.gradients.cardHeader}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal } from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { getAddress } from 'utils/addressHelpers'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\nexport default function Swap({ history }: RouteComponentProps) {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\n  const {\n    match: {\n      params: { currencyIdA },\n    },\n  } = props\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity {...props} />\n}\n\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const {\n    match: {\n      params: { currencyIdA, currencyIdB },\n    },\n  } = props\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity {...props} />\n}\n","import React from 'react'\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure({\n  match: {\n    params: { tokens },\n  },\n}: RouteComponentProps<{ tokens: string }>) {\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\n  const {\n    location,\n    location: { search },\n    match: {\n      params: { outputCurrency },\n    },\n  } = props\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\nconst Voting = lazy(() => import('./views/Voting'))\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/home\" exact>\n              <Home />\n            </Route>\n            <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route>\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\" component={Swap} />\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\n            <Route exact strict path=\"/find\" component={PoolFinder} />\n            <Route exact strict path=\"/liquidity\" component={Liquidity} />\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\n            <Route exact path=\"/add\" component={AddLiquidity} />\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact path=\"/create\" component={AddLiquidity} />\n            <Route exact path=\"/create/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ApplicationUpdater from './state/application/updater'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <ApplicationUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}